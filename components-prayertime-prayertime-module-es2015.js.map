{"version":3,"sources":["./node_modules/ngx-print/__ivy_ngcc__/fesm2015/ngx-print.js","./src/app/components/prayertime/prayertime/prayer-date-range/prayer-date-range.component.html","./src/app/components/prayertime/prayertime/prayer-today/prayer-today.component.html","./src/app/components/prayertime/prayertime/prayertime.component.html","./src/app/components/prayertime/prayertime.module.ts","./src/app/components/prayertime/prayertime.service.ts","./src/app/components/prayertime/prayertime/prayer-date-range/prayer-date-range.component.scss","./src/app/components/prayertime/prayertime/prayer-date-range/prayer-date-range.component.ts","./src/app/components/prayertime/prayertime/prayer-today/prayer-today.component.scss","./src/app/components/prayertime/prayertime/prayer-today/prayer-today.component.ts","./src/app/components/prayertime/prayertime/prayertime.component.scss","./src/app/components/prayertime/prayertime/prayertime.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAyE;;AAEzE;AACA;AACA,cAAc,uFAAuF;AACrG;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2CAA2C,GAAG;AACxE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mEAAmE,YAAY;AAC/E,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA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","file":"components-prayertime-prayertime-module-es2015.js","sourcesContent":["import { Directive, HostListener, Input, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass NgxPrintDirective {\n    constructor() {\n        this._printStyle = [];\n        /**\n         *\n         *\n         * \\@memberof NgxPrintDirective\n         */\n        this.useExistingCss = false;\n        /**\n         * A delay in milliseconds to force the print dialog to wait before opened. Default: 0\n         *\n         * \\@memberof NgxPrintDirective\n         */\n        this.printDelay = 0;\n        /**\n         *\n         *\n         * @return html for the given tag\n         *\n         * \\@memberof NgxPrintDirective\n         */\n        this._styleSheetFile = '';\n    }\n    /**\n     *\n     *\n     * \\@memberof NgxPrintDirective\n     * @param {?} values\n     * @return {?}\n     */\n    set printStyle(values) {\n        for (let key in values) {\n            if (values.hasOwnProperty(key)) {\n                this._printStyle.push((key + JSON.stringify(values[key])).replace(/['\"]+/g, ''));\n            }\n        }\n        this.returnStyleValues();\n    }\n    /**\n     *\n     *\n     * \\@memberof NgxPrintDirective\n     * @return {?} the string that create the stylesheet which will be injected\n     * later within <style></style> tag.\n     *\n     * -join/replace to transform an array objects to css-styled string\n     *\n     */\n    returnStyleValues() {\n        return `<style> ${this._printStyle.join(' ').replace(/,/g, ';')} </style>`;\n    }\n    /**\n     * \\@memberof NgxPrintDirective\n     * @param {?} cssList\n     * @return {?}\n     */\n    set styleSheetFile(cssList) {\n        /** @type {?} */\n        let linkTagFn = (/**\n         * @param {?} cssFileName\n         * @return {?}\n         */\n        function (cssFileName) {\n            return `<link rel=\"stylesheet\" type=\"text/css\" href=\"${cssFileName}\">`;\n        });\n        if (cssList.indexOf(',') !== -1) {\n            /** @type {?} */\n            const valueArr = cssList.split(',');\n            for (let val of valueArr) {\n                this._styleSheetFile = this._styleSheetFile + linkTagFn(val);\n            }\n        }\n        else {\n            this._styleSheetFile = linkTagFn(cssList);\n        }\n    }\n    /**\n     * @private\n     * @return {?} string which contains the link tags containing the css which will\n     * be injected later within <head></head> tag.\n     *\n     */\n    returnStyleSheetLinkTags() {\n        return this._styleSheetFile;\n    }\n    /**\n     * @private\n     * @param {?} tag\n     * @return {?}\n     */\n    getElementTag(tag) {\n        /** @type {?} */\n        const html = [];\n        /** @type {?} */\n        const elements = document.getElementsByTagName(tag);\n        for (let index = 0; index < elements.length; index++) {\n            html.push(elements[index].outerHTML);\n        }\n        return html.join('\\r\\n');\n    }\n    /**\n     * @private\n     * @return {?} html section to be printed along with some associated inputs\n     *\n     */\n    getHtmlContents() {\n        /** @type {?} */\n        let printContents = document.getElementById(this.printSectionId);\n        /** @type {?} */\n        let innards = printContents.getElementsByTagName('input');\n        for (var i = 0; i < innards.length; i++) {\n            innards[i].defaultValue = innards[i].value;\n        }\n        return printContents.innerHTML;\n    }\n    /**\n     *\n     *\n     * \\@memberof NgxPrintDirective\n     * @return {?}\n     */\n    print() {\n        /** @type {?} */\n        let printContents;\n        /** @type {?} */\n        let popupWin;\n        /** @type {?} */\n        let styles = '';\n        /** @type {?} */\n        let links = '';\n        if (this.useExistingCss) {\n            styles = this.getElementTag('style');\n            links = this.getElementTag('link');\n        }\n        printContents = this.getHtmlContents();\n        popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=auto,width=auto\");\n        popupWin.document.open();\n        popupWin.document.write(`\n      <html>\n        <head>\n          <title>${this.printTitle ? this.printTitle : \"\"}</title>\n          ${this.returnStyleValues()}\n          ${this.returnStyleSheetLinkTags()}\n          ${styles}\n          ${links}\n        </head>\n        <body>\n          ${printContents}\n          <script defer>\n            function triggerPrint(event) {\n              window.removeEventListener('load', triggerPrint, false);\n              setTimeout(function() {\n                window.print();\n                setTimeout(function() { window.close(); }, 0);\n              }, ${this.printDelay});\n            }\n            window.addEventListener('load', triggerPrint, false);\n          </script>\n        </body>\n      </html>`);\n        popupWin.document.close();\n    }\n}\nNgxPrintDirective.ɵfac = function NgxPrintDirective_Factory(t) { return new (t || NgxPrintDirective)(); };\nNgxPrintDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxPrintDirective, selectors: [[\"button\", \"ngxPrint\", \"\"]], hostBindings: function NgxPrintDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NgxPrintDirective_click_HostBindingHandler() { return ctx.print(); });\n    } }, inputs: { useExistingCss: \"useExistingCss\", printDelay: \"printDelay\", printStyle: \"printStyle\", styleSheetFile: \"styleSheetFile\", printSectionId: \"printSectionId\", printTitle: \"printTitle\" } });\nNgxPrintDirective.propDecorators = {\n    printSectionId: [{ type: Input }],\n    printTitle: [{ type: Input }],\n    useExistingCss: [{ type: Input }],\n    printDelay: [{ type: Input }],\n    printStyle: [{ type: Input }],\n    styleSheetFile: [{ type: Input }],\n    print: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxPrintDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"button[ngxPrint]\"\n            }]\n    }], function () { return []; }, { useExistingCss: [{\n            type: Input\n        }], printDelay: [{\n            type: Input\n        }], printStyle: [{\n            type: Input\n        }], styleSheetFile: [{\n            type: Input\n        }], print: [{\n            type: HostListener,\n            args: ['click']\n        }], printSectionId: [{\n            type: Input\n        }], printTitle: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxPrintModule {\n}\nNgxPrintModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxPrintModule });\nNgxPrintModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxPrintModule_Factory(t) { return new (t || NgxPrintModule)(); }, imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxPrintModule, { declarations: [NgxPrintDirective], exports: [NgxPrintDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxPrintModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxPrintDirective],\n                imports: [],\n                exports: [NgxPrintDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxPrintDirective, NgxPrintModule };\n\n//# sourceMappingURL=ngx-print.js.map","export default \"<mat-drawer-container autosize [hasBackdrop]=\\\"false\\\">\\n  <!-- Settings -->\\n  <div>\\n    <button type=\\\"button\\\" class=\\\"floating-btn\\\" mat-mini-fab (click)=\\\"columnOptionDrawer.toggle()\\\">\\n      <mat-icon>settings</mat-icon>\\n    </button>\\n    <mat-drawer #columnOptionDrawer position=\\\"end\\\" mode=\\\"push\\\" class=\\\"columnOptionDrawer\\\">\\n      <mat-card-title>Settings</mat-card-title>\\n      <mat-form-field>\\n        <mat-label>Start Date</mat-label>\\n        <input matInput [(ngModel)]=\\\"startDate\\\" (change)=\\\"refresh()\\\" [matDatepicker]=\\\"picker\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-label>Number of days</mat-label>\\n        <input type=\\\"number\\\" matInput [(ngModel)]=\\\"numberOfDays\\\" (change)=\\\"refresh()\\\" max=\\\"365\\\">\\n      </mat-form-field>\\n      <div *ngFor=\\\"let column of columns\\\">\\n        <mat-checkbox [(ngModel)]=\\\"column.isDisplay\\\" (change)=\\\"checkboxChange()\\\">{{column.name}}</mat-checkbox>\\n      </div>\\n    </mat-drawer>\\n\\n    <!-- <button printSectionId=\\\"print-section\\\" [useExistingCss]=\\\"true\\\" ngxPrint mat-button type=\\\"button\\\">\\n      Print\\n    </button> -->\\n  </div>\\n  <!-- Prayer table -->\\n  <table id=\\\"print-section\\\" *ngIf=\\\"columnsToDisplay\\\" #prayerTable mat-table [dataSource]=\\\"dayPrayers\\\"\\n    class=\\\"mat-elevation-z8\\\">\\n    <ng-container matColumnDef=\\\"Fajr\\\">\\n      <th mat-header-cell *matHeaderCellDef> Fajr </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Fajr}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"Dhuhr\\\">\\n      <th mat-header-cell *matHeaderCellDef> Dhuhr </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Dhuhr}} </td>\\n    </ng-container>\\n    <mat-text-column name=\\\"Asr\\\"></mat-text-column>\\n    <mat-text-column name=\\\"Maghrib\\\"></mat-text-column>\\n    <mat-text-column name=\\\"Isha\\\"></mat-text-column>\\n    <mat-text-column name=\\\"Sunrise\\\"></mat-text-column>\\n    <mat-text-column name=\\\"Sunset\\\"></mat-text-column>\\n    <mat-text-column name=\\\"Imsak\\\"></mat-text-column>\\n    <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\n  </table>\\n</mat-drawer-container>\\n\";","export default \"<div class=\\\"container-fluid row\\\">\\n  <div class=\\\"col-sm-6\\\">\\n    <mat-list *ngIf=\\\"todayPrayerTimes\\\">\\n      <mat-list-item *ngFor=\\\"let item of todayPrayerTimes\\\" class=\\\"today-timing-list\\\">\\n        <div class=\\\"today-timing-list-item-name\\\">{{item.name}}</div>\\n        <div class=\\\"today-timing-list-item-value\\\">{{item.value}}</div>\\n      </mat-list-item>\\n    </mat-list>\\n  </div>\\n  <!--other times-->\\n  <div class=\\\"col-sm-6\\\">\\n    <mat-list *ngIf=\\\"todayOtherTimes\\\">\\n      <mat-list-item *ngFor=\\\"let item of todayOtherTimes\\\" class=\\\"today-timing-list\\\">\\n        <div class=\\\"today-timing-list-item-name\\\">{{item.name}}</div>\\n        <div class=\\\"today-timing-list-item-value\\\">{{item.value}}</div>\\n      </mat-list-item>\\n    </mat-list>\\n  </div>\\n</div>\\n\";","export default \"<mat-card>\\n  <mat-card-title>Namaz Times</mat-card-title>\\n  <mat-tab-group [selectedIndex]=\\\"tabSelectedIndex\\\">\\n    <mat-tab label=\\\"Today\\\">\\n      <ng-template matTabContent>\\n        <!--prayer times-->\\n        <app-prayer-today [selectedSchool]=\\\"selectedSchool\\\" [selectedCalcMethod]=\\\"selectedCalcMethod\\\"\\n          [midnightMode]=\\\"midnightMode\\\" [latitudeAdjustmentMethod]=\\\"latitudeAdjustmentMethod\\\">\\n        </app-prayer-today>\\n      </ng-template>\\n    </mat-tab>\\n    <mat-tab label=\\\"Date Range\\\">\\n      <ng-template matTabContent>\\n        <app-prayer-date-range [selectedSchool]=\\\"selectedSchool\\\" [selectedCalcMethod]=\\\"selectedCalcMethod\\\"\\n          [midnightMode]=\\\"midnightMode\\\" [latitudeAdjustmentMethod]=\\\"latitudeAdjustmentMethod\\\">\\n        </app-prayer-date-range>\\n      </ng-template>\\n    </mat-tab>\\n  </mat-tab-group>\\n</mat-card>\\n\\n\\n<!--Meta data-->\\n<mat-card>\\n  <mat-card-title>Meta data (Defaults are selected, You might want to change as per your preference.)</mat-card-title>\\n  <mat-form-field>\\n    <mat-label>Schools of thought about how to compute the timings</mat-label>\\n    <mat-select [(ngModel)]=\\\"selectedCalcMethod\\\" (selectionChange)=\\\"calMethodSelectionChange($event)\\\">\\n      <mat-option *ngFor=\\\"let method of calcMethods\\\" [value]=\\\"method.id\\\">\\n        {{method.name}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label>School</mat-label>\\n    <mat-select [(ngModel)]=\\\"selectedSchool\\\" (selectionChange)=\\\"schoolSelectionChange($event)\\\">\\n      <mat-option *ngFor=\\\"let school of schools; let index = index\\\" [value]=\\\"index\\\">\\n        {{school}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n</mat-card>\\n\";","import { NgModule } from '@angular/core';\nimport { NgxPrintModule } from 'ngx-print';\nimport { CommonModule } from '@angular/common';\nimport { PrayerTimeComponent } from './prayertime/prayertime.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PrayerTimeService } from './prayertime.service';\nimport { SharedModule } from '@irshadali/controls';\nimport { PrayerTodayComponent } from './prayertime/prayer-today/prayer-today.component';\nimport { PrayerDateRangeComponent } from './prayertime/prayer-date-range/prayer-date-range.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: PrayerTimeComponent,\n  },\n  // {\n  //   path: ':category/:title', component: BlogsComponent,\n  // }\n];\n\n@NgModule({\n  declarations: [PrayerTimeComponent, PrayerTodayComponent, PrayerDateRangeComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule.forRoot(),\n    NgxPrintModule\n  ],\n  providers: [\n    PrayerTimeService\n  ]\n})\nexport class PrayerTimeModule { }\n","import { Injectable } from '@angular/core';\nimport { IrsHttpService } from '@irshadali/controls';\n\n@Injectable()\nexport class PrayerTimeService {\n\n  private baseUrl = '//api.aladhan.com/v1/';\n\n  constructor(private http: IrsHttpService) {\n    this.http.setApiUrl(this.baseUrl);\n  }\n\n  public getTodayPrayerTimes(\n    latitude: number, longitude: number, method: number, school: number = 3, midnightMode: number = 0, latitudeAdjustmentMethod: number = 0\n  ) {\n    const timestamp = new Date().getTime() / 1000;\n    return this.http.get(`timings/${timestamp}?latitude=${latitude}&longitude=${longitude}&method=${method}`);\n  }\n\n  // Get prayers times of particular day\n  public getPrayerTimes(\n    timestamp: number, latitude: number, longitude: number, method: number, school: number = 3,\n    midnightMode: number = 0, latitudeAdjustmentMethod: number = 0\n  ) {\n    return this.http.get(`timings/${timestamp}?latitude=${latitude}&longitude=${longitude}&method=${method}`);\n  }\n\n  public getThisMonthPrayerTimes(lat: number, lng: number) {\n    const timestamp = new Date().getTime() / 1000;\n    return this.http.get(`${timestamp}?latitude=${lat}&longitude=${lng}`);\n  }\n\n  public getMethodsOfCalc() {\n    const timestamp = new Date().getTime() / 1000;\n    return this.http.get(`${timestamp}`);\n  }\n}\n","export default \".columnOptionDrawer {\\n  padding-left: 10px;\\n  padding-top: 5px;\\n}\\n.columnOptionDrawer mat-checkbox {\\n  display: block;\\n  padding-top: 5px;\\n}\\n.floating-btn {\\n  position: fixed;\\n  bottom: 20px;\\n  right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcmF5ZXJ0aW1lL3ByYXllcnRpbWUvcHJheWVyLWRhdGUtcmFuZ2UvRDpcXFdvcmtzcGFjZVxcUHJvamVjdHNcXHByYXllcnRpbWVzL3NyY1xcYXBwXFxjb21wb25lbnRzXFxwcmF5ZXJ0aW1lXFxwcmF5ZXJ0aW1lXFxwcmF5ZXItZGF0ZS1yYW5nZVxccHJheWVyLWRhdGUtcmFuZ2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvcHJheWVydGltZS9wcmF5ZXJ0aW1lL3ByYXllci1kYXRlLXJhbmdlL3ByYXllci1kYXRlLXJhbmdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxnQkFBQTtBQ0NGO0FEQUU7RUFDRSxjQUFBO0VBQ0EsZ0JBQUE7QUNFSjtBREVBO0VBQ0UsZUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3ByYXllcnRpbWUvcHJheWVydGltZS9wcmF5ZXItZGF0ZS1yYW5nZS9wcmF5ZXItZGF0ZS1yYW5nZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb2x1bW5PcHRpb25EcmF3ZXIge1xyXG4gIHBhZGRpbmctbGVmdDogMTBweDtcclxuICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gIG1hdC1jaGVja2JveCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgfVxyXG59XHJcblxyXG4uZmxvYXRpbmctYnRue1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBib3R0b206IDIwcHg7XHJcbiAgcmlnaHQ6IDIwcHg7XHJcbn1cclxuIiwiLmNvbHVtbk9wdGlvbkRyYXdlciB7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy10b3A6IDVweDtcbn1cbi5jb2x1bW5PcHRpb25EcmF3ZXIgbWF0LWNoZWNrYm94IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmctdG9wOiA1cHg7XG59XG5cbi5mbG9hdGluZy1idG4ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMjBweDtcbiAgcmlnaHQ6IDIwcHg7XG59Il19 */\";","import { Component, OnInit, OnChanges, Input, SimpleChanges, ViewChild } from '@angular/core';\nimport { AppServices } from 'src/app/services/app.services';\nimport { PrayerTimeService } from '../../prayertime.service';\nimport { MatTable } from '@angular/material/table';\n\n@Component({\n  selector: 'app-prayer-date-range',\n  templateUrl: './prayer-date-range.component.html',\n  styleUrls: ['./prayer-date-range.component.scss']\n})\nexport class PrayerDateRangeComponent implements OnInit, OnChanges {\n\n  @Input() selectedSchool: number;\n  @Input() selectedCalcMethod: any;\n  @Input() midnightMode: number;\n  @Input() latitudeAdjustmentMethod: number;\n  @ViewChild('prayerTable') prayerTable: MatTable<any>;\n\n  dayPrayers: any[];\n  tempData: any;\n  columnsToDisplay: any[];\n  columns: any[];\n  startDate: Date;\n  numberOfDays: number;\n\n  constructor(private appServices: AppServices, private prayerTimeService: PrayerTimeService) { }\n\n  ngOnInit(): void {\n    this.onInit();\n  }\n\n  onInit() {\n    this.dayPrayers = [];\n    this.populatePrayerColumns();\n    this.updateDisplayColumns();\n    this.startDate = new Date();\n    this.numberOfDays = 7;\n  }\n\n  updateDisplayColumns() {\n    this.columnsToDisplay = this.columns.filter(y => y.isDisplay === true).map(y => y.name);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  checkboxChange() {\n    // console.log(event.checked);\n    // this.columns.filter(y => y.name === timing)[0].isDisplay = event.checked;\n    this.updateDisplayColumns();\n  }\n\n  populatePrayerColumns(): void {\n    const cols: any[] = [\n      { name: 'Fajr', isDisplay: true },\n      { name: 'Dhuhr', isDisplay: true },\n      { name: 'Asr', isDisplay: true },\n      { name: 'Maghrib', isDisplay: true },\n      { name: 'Isha', isDisplay: true },\n      { name: 'Sunrise', isDisplay: false },\n      { name: 'Sunset', isDisplay: false },\n      { name: 'Imsak', isDisplay: false }\n    ];\n    this.columns = cols;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.selectedSchool !== undefined && this.selectedCalcMethod !== undefined &&\n      this.midnightMode !== undefined && this.latitudeAdjustmentMethod !== undefined) {\n      this.onInit();\n      this.getData();\n    }\n  }\n\n  getData() {\n    this.dayPrayers = [];\n    for (let i = 0; i < 7; i++) {\n      const date = this.startDate;\n      date.setDate(date.getDate() + i);\n      const timestamp = date.getTime() / 1000;\n\n      this.prayerTimeService.getPrayerTimes(\n        timestamp, this.appServices.geo.lat, this.appServices.geo.lng, this.selectedCalcMethod, this.selectedSchool,\n        this.midnightMode, this.latitudeAdjustmentMethod)\n        .subscribe((x: any) => {\n          if (x.code === 200) {\n            this.tempData = x.data;\n            const timings = x.data.timings;\n\n            this.dayPrayers.push(timings);\n            // this.todayPrayerTimes.push({ name: 'Fajr', value: timings['Fajr'] });\n            // this.todayPrayerTimes.push({ name: 'Dhuhr', value: timings['Dhuhr'] });\n            // this.todayPrayerTimes.push({ name: 'Asr', value: timings['Asr'] });\n            // this.todayPrayerTimes.push({ name: 'Maghrib', value: timings['Maghrib'] });\n            // this.todayPrayerTimes.push({ name: 'Isha', value: timings['Isha'] });\n            // this.todayOtherTimes.push({ name: 'Sunrise', value: timings['Sunrise'] });\n            // this.todayOtherTimes.push({ name: 'Sunset', value: timings['Sunset'] });\n            // this.todayOtherTimes.push({ name: 'Imsak', value: timings['Imsak'] });\n            if (this.prayerTable) {\n              this.prayerTable.renderRows();\n            }\n          } else {\n            console.log(x);\n          }\n        });\n    }\n  }\n\n}\n\n","export default \".today-timing-list .today-timing-list-item-name {\\n  min-width: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcmF5ZXJ0aW1lL3ByYXllcnRpbWUvcHJheWVyLXRvZGF5L0Q6XFxXb3Jrc3BhY2VcXFByb2plY3RzXFxwcmF5ZXJ0aW1lcy9zcmNcXGFwcFxcY29tcG9uZW50c1xccHJheWVydGltZVxccHJheWVydGltZVxccHJheWVyLXRvZGF5XFxwcmF5ZXItdG9kYXkuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvcHJheWVydGltZS9wcmF5ZXJ0aW1lL3ByYXllci10b2RheS9wcmF5ZXItdG9kYXkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxnQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcmF5ZXJ0aW1lL3ByYXllcnRpbWUvcHJheWVyLXRvZGF5L3ByYXllci10b2RheS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b2RheS10aW1pbmctbGlzdHtcclxuICAudG9kYXktdGltaW5nLWxpc3QtaXRlbS1uYW1le1xyXG4gICAgbWluLXdpZHRoOjEwMHB4O1xyXG4gIH1cclxufVxyXG4iLCIudG9kYXktdGltaW5nLWxpc3QgLnRvZGF5LXRpbWluZy1saXN0LWl0ZW0tbmFtZSB7XG4gIG1pbi13aWR0aDogMTAwcHg7XG59Il19 */\";","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AppServices } from 'src/app/services/app.services';\nimport { PrayerTimeService } from '../../prayertime.service';\n\n@Component({\n  selector: 'app-prayer-today',\n  templateUrl: './prayer-today.component.html',\n  styleUrls: ['./prayer-today.component.scss']\n})\nexport class PrayerTodayComponent implements OnInit, OnChanges {\n\n  @Input() selectedSchool: number;\n  @Input() selectedCalcMethod: any;\n  @Input() midnightMode: number;\n  @Input() latitudeAdjustmentMethod: number;\n\n  todayPrayerTimes: any[];\n  todayOtherTimes: any[];\n  tempData: any;\n\n  constructor(private appServices: AppServices, private prayerTimeService: PrayerTimeService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.selectedSchool !== undefined && this.selectedCalcMethod !== undefined &&\n      this.midnightMode !== undefined && this.latitudeAdjustmentMethod !== undefined) {\n      this.getTodaysData();\n    }\n  }\n\n  getTodaysData() {\n    this.prayerTimeService.getTodayPrayerTimes(\n      this.appServices.geo.lat, this.appServices.geo.lng, this.selectedCalcMethod, this.selectedSchool,\n      this.midnightMode, this.latitudeAdjustmentMethod)\n      .subscribe((x: any) => {\n        if (x.code === 200) {\n          this.tempData = x.data;\n          const timings = x.data.timings;\n          this.todayPrayerTimes = [];\n          this.todayPrayerTimes.push({ name: 'Fajr', value: timings['Fajr'] });\n          this.todayPrayerTimes.push({ name: 'Dhuhr', value: timings['Dhuhr'] });\n          this.todayPrayerTimes.push({ name: 'Asr', value: timings['Asr'] });\n          this.todayPrayerTimes.push({ name: 'Maghrib', value: timings['Maghrib'] });\n          this.todayPrayerTimes.push({ name: 'Isha', value: timings['Isha'] });\n\n          this.todayOtherTimes = [];\n          this.todayOtherTimes.push({ name: 'Sunrise', value: timings['Sunrise'] });\n          this.todayOtherTimes.push({ name: 'Sunset', value: timings['Sunset'] });\n          this.todayOtherTimes.push({ name: 'Imsak', value: timings['Imsak'] });\n\n        } else {\n          console.log(x);\n        }\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJheWVydGltZS9wcmF5ZXJ0aW1lL3ByYXllcnRpbWUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AppServices } from 'src/app/services/app.services';\nimport { PrayerTimeService } from '../prayertime.service';\n\n@Component({\n  selector: 'app-prayertime',\n  templateUrl: './prayertime.component.html',\n  styleUrls: ['./prayertime.component.scss']\n})\nexport class PrayerTimeComponent implements OnInit {\n  calcMethods: any[];\n  asarCalcMethods: any[];\n  selectedCalcMethod: any;\n  midnightMode: number;\n  latitudeAdjustmentMethod: number;\n  selectedSchool: number;\n  schools: string[];\n  tabSelectedIndex: number;\n\n  constructor(private appServices: AppServices, private prayerTimeService: PrayerTimeService) { }\n\n  async ngOnInit() {\n    this.tabSelectedIndex = 2;\n    this.calcMethods = this.appServices.getCalcMethods();\n    this.schools = this.appServices.getSchools();\n\n    // lat/lng is required to load upfront before selected{Properties}\n    if (!this.appServices.geo.isLatLngFound) {\n      await this.appServices.geo.getSetLatLng();\n    }\n\n    // if selectedCalcMethod is already stored with us use that, otherwise default\n    const selectedCalcMethod = this.appServices.store.getSelectedCalcMethod();\n    this.selectedCalcMethod = selectedCalcMethod === null ? 2 : Number(selectedCalcMethod);;\n\n    const selectedSchool = this.appServices.store.getSelectedSchool();\n    this.selectedSchool = selectedSchool === null ? 1 : Number(selectedSchool);\n\n    const midnightMode = this.appServices.store.getMidnightMode();\n    this.midnightMode = midnightMode === null ? 1 : Number(midnightMode);\n\n    const latitudeAdjustmentMethod = this.appServices.store.getLatitudeAdjustmentMethod();\n    this.latitudeAdjustmentMethod = latitudeAdjustmentMethod === null ? 0 : Number(latitudeAdjustmentMethod);;\n\n  }\n\n  calMethodSelectionChange($event) {\n    // console.log($event);\n    // store to show preselected next time\n    this.appServices.store.setSelectedCalcMethod(String($event.value));\n  }\n\n  schoolSelectionChange($event) {\n    // store to show preselected next time\n    this.appServices.store.setSelectedSchool(String($event.value));\n  }\n\n  refresh() {\n    // find selected tab\n    this.selectedCalcMethod = 10;\n\n    // update the data of selected tab\n\n  }\n\n}\n"],"sourceRoot":"webpack:///"}