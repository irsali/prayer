{"version":3,"sources":["webpack:///node_modules/ngx-print/__ivy_ngcc__/fesm2015/ngx-print.js","webpack:///src/app/components/prayertime/prayertime/prayer-date-range/prayer-date-range.component.html","webpack:///src/app/components/prayertime/prayertime/prayer-today/prayer-today.component.html","webpack:///src/app/components/prayertime/prayertime/prayertime.component.html","webpack:///src/app/components/prayertime/prayertime.module.ts","webpack:///src/app/components/prayertime/prayertime.service.ts","webpack:///src/app/components/prayertime/prayertime/prayer-date-range/prayer-date-range.component.scss","webpack:///src/app/components/prayertime/prayertime/prayer-date-range/prayer-date-range.component.ts","webpack:///src/app/components/prayertime/prayertime/prayer-today/prayer-today.component.scss","webpack:///src/app/components/prayertime/prayertime/prayer-today/prayer-today.component.ts","webpack:///src/app/components/prayertime/prayertime/prayertime.component.scss","webpack:///src/app/components/prayertime/prayertime/prayertime.component.ts"],"names":["NgxPrintDirective","_printStyle","useExistingCss","printDelay","_styleSheetFile","join","replace","tag","html","elements","document","getElementsByTagName","index","length","push","outerHTML","printContents","getElementById","printSectionId","innards","i","defaultValue","value","innerHTML","popupWin","styles","links","getElementTag","getHtmlContents","window","open","write","printTitle","returnStyleValues","returnStyleSheetLinkTags","close","values","key","hasOwnProperty","JSON","stringify","cssList","linkTagFn","cssFileName","indexOf","valueArr","split","val","ɵfac","NgxPrintDirective_Factory","t","ɵdir","type","selectors","hostBindings","NgxPrintDirective_HostBindings","rf","ctx","NgxPrintDirective_click_HostBindingHandler","print","inputs","printStyle","styleSheetFile","propDecorators","args","selector","NgxPrintModule","ɵmod","ɵinj","factory","NgxPrintModule_Factory","imports","ngJitMode","declarations","exports","routes","path","component","PrayerTimeModule","forChild","forRoot","providers","PrayerTimeService","http","baseUrl","setApiUrl","latitude","longitude","method","school","midnightMode","latitudeAdjustmentMethod","timestamp","Date","getTime","get","lat","lng","PrayerDateRangeComponent","appServices","prayerTimeService","onInit","dayPrayers","populatePrayerColumns","updateDisplayColumns","startDate","numberOfDays","columnsToDisplay","columns","filter","y","isDisplay","map","name","getData","cols","changes","selectedSchool","undefined","selectedCalcMethod","date","setDate","getDate","getPrayerTimes","geo","subscribe","x","code","tempData","data","timings","prayerTable","renderRows","console","log","template","PrayerTodayComponent","getTodaysData","getTodayPrayerTimes","todayPrayerTimes","todayOtherTimes","PrayerTimeComponent","tabSelectedIndex","calcMethods","getCalcMethods","schools","getSchools","isLatLngFound","getSetLatLng","store","getSelectedCalcMethod","Number","getSelectedSchool","getMidnightMode","getLatitudeAdjustmentMethod","$event","setSelectedCalcMethod","String","setSelectedSchool"],"mappings":"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","file":"components-prayertime-prayertime-module-es5.js","sourcesContent":["import { Directive, HostListener, Input, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass NgxPrintDirective {\n    constructor() {\n        this._printStyle = [];\n        /**\n         *\n         *\n         * \\@memberof NgxPrintDirective\n         */\n        this.useExistingCss = false;\n        /**\n         * A delay in milliseconds to force the print dialog to wait before opened. Default: 0\n         *\n         * \\@memberof NgxPrintDirective\n         */\n        this.printDelay = 0;\n        /**\n         *\n         *\n         * @return html for the given tag\n         *\n         * \\@memberof NgxPrintDirective\n         */\n        this._styleSheetFile = '';\n    }\n    /**\n     *\n     *\n     * \\@memberof NgxPrintDirective\n     * @param {?} values\n     * @return {?}\n     */\n    set printStyle(values) {\n        for (let key in values) {\n            if (values.hasOwnProperty(key)) {\n                this._printStyle.push((key + JSON.stringify(values[key])).replace(/['\"]+/g, ''));\n            }\n        }\n        this.returnStyleValues();\n    }\n    /**\n     *\n     *\n     * \\@memberof NgxPrintDirective\n     * @return {?} the string that create the stylesheet which will be injected\n     * later within <style></style> tag.\n     *\n     * -join/replace to transform an array objects to css-styled string\n     *\n     */\n    returnStyleValues() {\n        return `<style> ${this._printStyle.join(' ').replace(/,/g, ';')} </style>`;\n    }\n    /**\n     * \\@memberof NgxPrintDirective\n     * @param {?} cssList\n     * @return {?}\n     */\n    set styleSheetFile(cssList) {\n        /** @type {?} */\n        let linkTagFn = (/**\n         * @param {?} cssFileName\n         * @return {?}\n         */\n        function (cssFileName) {\n            return `<link rel=\"stylesheet\" type=\"text/css\" href=\"${cssFileName}\">`;\n        });\n        if (cssList.indexOf(',') !== -1) {\n            /** @type {?} */\n            const valueArr = cssList.split(',');\n            for (let val of valueArr) {\n                this._styleSheetFile = this._styleSheetFile + linkTagFn(val);\n            }\n        }\n        else {\n            this._styleSheetFile = linkTagFn(cssList);\n        }\n    }\n    /**\n     * @private\n     * @return {?} string which contains the link tags containing the css which will\n     * be injected later within <head></head> tag.\n     *\n     */\n    returnStyleSheetLinkTags() {\n        return this._styleSheetFile;\n    }\n    /**\n     * @private\n     * @param {?} tag\n     * @return {?}\n     */\n    getElementTag(tag) {\n        /** @type {?} */\n        const html = [];\n        /** @type {?} */\n        const elements = document.getElementsByTagName(tag);\n        for (let index = 0; index < elements.length; index++) {\n            html.push(elements[index].outerHTML);\n        }\n        return html.join('\\r\\n');\n    }\n    /**\n     * @private\n     * @return {?} html section to be printed along with some associated inputs\n     *\n     */\n    getHtmlContents() {\n        /** @type {?} */\n        let printContents = document.getElementById(this.printSectionId);\n        /** @type {?} */\n        let innards = printContents.getElementsByTagName('input');\n        for (var i = 0; i < innards.length; i++) {\n            innards[i].defaultValue = innards[i].value;\n        }\n        return printContents.innerHTML;\n    }\n    /**\n     *\n     *\n     * \\@memberof NgxPrintDirective\n     * @return {?}\n     */\n    print() {\n        /** @type {?} */\n        let printContents;\n        /** @type {?} */\n        let popupWin;\n        /** @type {?} */\n        let styles = '';\n        /** @type {?} */\n        let links = '';\n        if (this.useExistingCss) {\n            styles = this.getElementTag('style');\n            links = this.getElementTag('link');\n        }\n        printContents = this.getHtmlContents();\n        popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=auto,width=auto\");\n        popupWin.document.open();\n        popupWin.document.write(`\n      <html>\n        <head>\n          <title>${this.printTitle ? this.printTitle : \"\"}</title>\n          ${this.returnStyleValues()}\n          ${this.returnStyleSheetLinkTags()}\n          ${styles}\n          ${links}\n        </head>\n        <body>\n          ${printContents}\n          <script defer>\n            function triggerPrint(event) {\n              window.removeEventListener('load', triggerPrint, false);\n              setTimeout(function() {\n                window.print();\n                setTimeout(function() { window.close(); }, 0);\n              }, ${this.printDelay});\n            }\n            window.addEventListener('load', triggerPrint, false);\n          </script>\n        </body>\n      </html>`);\n        popupWin.document.close();\n    }\n}\nNgxPrintDirective.ɵfac = function NgxPrintDirective_Factory(t) { return new (t || NgxPrintDirective)(); };\nNgxPrintDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxPrintDirective, selectors: [[\"button\", \"ngxPrint\", \"\"]], hostBindings: function NgxPrintDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NgxPrintDirective_click_HostBindingHandler() { return ctx.print(); });\n    } }, inputs: { useExistingCss: \"useExistingCss\", printDelay: \"printDelay\", printStyle: \"printStyle\", styleSheetFile: \"styleSheetFile\", printSectionId: \"printSectionId\", printTitle: \"printTitle\" } });\nNgxPrintDirective.propDecorators = {\n    printSectionId: [{ type: Input }],\n    printTitle: [{ type: Input }],\n    useExistingCss: [{ type: Input }],\n    printDelay: [{ type: Input }],\n    printStyle: [{ type: Input }],\n    styleSheetFile: [{ type: Input }],\n    print: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxPrintDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"button[ngxPrint]\"\n            }]\n    }], function () { return []; }, { useExistingCss: [{\n            type: Input\n        }], printDelay: [{\n            type: Input\n        }], printStyle: [{\n            type: Input\n        }], styleSheetFile: [{\n            type: Input\n        }], print: [{\n            type: HostListener,\n            args: ['click']\n        }], printSectionId: [{\n            type: Input\n        }], printTitle: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxPrintModule {\n}\nNgxPrintModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxPrintModule });\nNgxPrintModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxPrintModule_Factory(t) { return new (t || NgxPrintModule)(); }, imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxPrintModule, { declarations: [NgxPrintDirective], exports: [NgxPrintDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxPrintModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxPrintDirective],\n                imports: [],\n                exports: [NgxPrintDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxPrintDirective, NgxPrintModule };\n\n//# sourceMappingURL=ngx-print.js.map","export default \"<mat-drawer-container autosize [hasBackdrop]=\\\"false\\\">\\n  <!-- Settings -->\\n  <div>\\n    <button type=\\\"button\\\" class=\\\"floating-btn\\\" mat-mini-fab (click)=\\\"columnOptionDrawer.toggle()\\\">\\n      <mat-icon>settings</mat-icon>\\n    </button>\\n    <mat-drawer #columnOptionDrawer position=\\\"end\\\" mode=\\\"push\\\" class=\\\"columnOptionDrawer\\\">\\n      <mat-card-title>Settings</mat-card-title>\\n      <mat-form-field>\\n        <mat-label>Start Date</mat-label>\\n        <input matInput [(ngModel)]=\\\"startDate\\\" (change)=\\\"refresh()\\\" [matDatepicker]=\\\"picker\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-label>Number of days</mat-label>\\n        <input type=\\\"number\\\" matInput [(ngModel)]=\\\"numberOfDays\\\" (change)=\\\"refresh()\\\" max=\\\"365\\\">\\n      </mat-form-field>\\n      <div *ngFor=\\\"let column of columns\\\">\\n        <mat-checkbox [(ngModel)]=\\\"column.isDisplay\\\" (change)=\\\"checkboxChange()\\\">{{column.name}}</mat-checkbox>\\n      </div>\\n    </mat-drawer>\\n\\n    <!-- <button printSectionId=\\\"print-section\\\" [useExistingCss]=\\\"true\\\" ngxPrint mat-button type=\\\"button\\\">\\n      Print\\n    </button> -->\\n  </div>\\n  <!-- Prayer table -->\\n  <table id=\\\"print-section\\\" *ngIf=\\\"columnsToDisplay\\\" #prayerTable mat-table [dataSource]=\\\"dayPrayers\\\"\\n    class=\\\"mat-elevation-z8\\\">\\n    <ng-container matColumnDef=\\\"Fajr\\\">\\n      <th mat-header-cell *matHeaderCellDef> Fajr </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Fajr}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"Dhuhr\\\">\\n      <th mat-header-cell *matHeaderCellDef> Dhuhr </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Dhuhr}} </td>\\n    </ng-container>\\n    <mat-text-column name=\\\"Asr\\\"></mat-text-column>\\n    <mat-text-column name=\\\"Maghrib\\\"></mat-text-column>\\n    <mat-text-column name=\\\"Isha\\\"></mat-text-column>\\n    <mat-text-column name=\\\"Sunrise\\\"></mat-text-column>\\n    <mat-text-column name=\\\"Sunset\\\"></mat-text-column>\\n    <mat-text-column name=\\\"Imsak\\\"></mat-text-column>\\n    <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\n  </table>\\n</mat-drawer-container>\\n\";","export default \"<div class=\\\"container-fluid row\\\">\\n  <div class=\\\"col-sm-6\\\">\\n    <mat-list *ngIf=\\\"todayPrayerTimes\\\">\\n      <mat-list-item *ngFor=\\\"let item of todayPrayerTimes\\\" class=\\\"today-timing-list\\\">\\n        <div class=\\\"today-timing-list-item-name\\\">{{item.name}}</div>\\n        <div class=\\\"today-timing-list-item-value\\\">{{item.value}}</div>\\n      </mat-list-item>\\n    </mat-list>\\n  </div>\\n  <!--other times-->\\n  <div class=\\\"col-sm-6\\\">\\n    <mat-list *ngIf=\\\"todayOtherTimes\\\">\\n      <mat-list-item *ngFor=\\\"let item of todayOtherTimes\\\" class=\\\"today-timing-list\\\">\\n        <div class=\\\"today-timing-list-item-name\\\">{{item.name}}</div>\\n        <div class=\\\"today-timing-list-item-value\\\">{{item.value}}</div>\\n      </mat-list-item>\\n    </mat-list>\\n  </div>\\n</div>\\n\";","export default \"<mat-card>\\n  <mat-card-title>Namaz Times</mat-card-title>\\n  <mat-tab-group [selectedIndex]=\\\"tabSelectedIndex\\\">\\n    <mat-tab label=\\\"Today\\\">\\n      <ng-template matTabContent>\\n        <!--prayer times-->\\n        <app-prayer-today [selectedSchool]=\\\"selectedSchool\\\" [selectedCalcMethod]=\\\"selectedCalcMethod\\\"\\n          [midnightMode]=\\\"midnightMode\\\" [latitudeAdjustmentMethod]=\\\"latitudeAdjustmentMethod\\\">\\n        </app-prayer-today>\\n      </ng-template>\\n    </mat-tab>\\n    <mat-tab label=\\\"Date Range\\\">\\n      <ng-template matTabContent>\\n        <app-prayer-date-range [selectedSchool]=\\\"selectedSchool\\\" [selectedCalcMethod]=\\\"selectedCalcMethod\\\"\\n          [midnightMode]=\\\"midnightMode\\\" [latitudeAdjustmentMethod]=\\\"latitudeAdjustmentMethod\\\">\\n        </app-prayer-date-range>\\n      </ng-template>\\n    </mat-tab>\\n  </mat-tab-group>\\n</mat-card>\\n\\n\\n<!--Meta data-->\\n<mat-card>\\n  <mat-card-title>Meta data (Defaults are selected, You might want to change as per your preference.)</mat-card-title>\\n  <mat-form-field>\\n    <mat-label>Schools of thought about how to compute the timings</mat-label>\\n    <mat-select [(ngModel)]=\\\"selectedCalcMethod\\\" (selectionChange)=\\\"calMethodSelectionChange($event)\\\">\\n      <mat-option *ngFor=\\\"let method of calcMethods\\\" [value]=\\\"method.id\\\">\\n        {{method.name}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label>School</mat-label>\\n    <mat-select [(ngModel)]=\\\"selectedSchool\\\" (selectionChange)=\\\"schoolSelectionChange($event)\\\">\\n      <mat-option *ngFor=\\\"let school of schools; let index = index\\\" [value]=\\\"index\\\">\\n        {{school}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n</mat-card>\\n\";","import { NgModule } from '@angular/core';\nimport { NgxPrintModule } from 'ngx-print';\nimport { CommonModule } from '@angular/common';\nimport { PrayerTimeComponent } from './prayertime/prayertime.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PrayerTimeService } from './prayertime.service';\nimport { SharedModule } from '@irshadali/controls';\nimport { PrayerTodayComponent } from './prayertime/prayer-today/prayer-today.component';\nimport { PrayerDateRangeComponent } from './prayertime/prayer-date-range/prayer-date-range.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: PrayerTimeComponent,\n  },\n  // {\n  //   path: ':category/:title', component: BlogsComponent,\n  // }\n];\n\n@NgModule({\n  declarations: [PrayerTimeComponent, PrayerTodayComponent, PrayerDateRangeComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule.forRoot(),\n    NgxPrintModule\n  ],\n  providers: [\n    PrayerTimeService\n  ]\n})\nexport class PrayerTimeModule { }\n","import { Injectable } from '@angular/core';\nimport { IrsHttpService } from '@irshadali/controls';\n\n@Injectable()\nexport class PrayerTimeService {\n\n  private baseUrl = '//api.aladhan.com/v1/';\n\n  constructor(private http: IrsHttpService) {\n    this.http.setApiUrl(this.baseUrl);\n  }\n\n  public getTodayPrayerTimes(\n    latitude: number, longitude: number, method: number, school: number = 3, midnightMode: number = 0, latitudeAdjustmentMethod: number = 0\n  ) {\n    const timestamp = new Date().getTime() / 1000;\n    return this.http.get(`timings/${timestamp}?latitude=${latitude}&longitude=${longitude}&method=${method}`);\n  }\n\n  // Get prayers times of particular day\n  public getPrayerTimes(\n    timestamp: number, latitude: number, longitude: number, method: number, school: number = 3,\n    midnightMode: number = 0, latitudeAdjustmentMethod: number = 0\n  ) {\n    return this.http.get(`timings/${timestamp}?latitude=${latitude}&longitude=${longitude}&method=${method}`);\n  }\n\n  public getThisMonthPrayerTimes(lat: number, lng: number) {\n    const timestamp = new Date().getTime() / 1000;\n    return this.http.get(`${timestamp}?latitude=${lat}&longitude=${lng}`);\n  }\n\n  public getMethodsOfCalc() {\n    const timestamp = new Date().getTime() / 1000;\n    return this.http.get(`${timestamp}`);\n  }\n}\n","export default \".columnOptionDrawer {\\n  padding-left: 10px;\\n  padding-top: 5px;\\n}\\n.columnOptionDrawer mat-checkbox {\\n  display: block;\\n  padding-top: 5px;\\n}\\n.floating-btn {\\n  position: fixed;\\n  bottom: 20px;\\n  right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcmF5ZXJ0aW1lL3ByYXllcnRpbWUvcHJheWVyLWRhdGUtcmFuZ2UvRDpcXFdvcmtzcGFjZVxcUHJvamVjdHNcXHByYXllcnRpbWVzL3NyY1xcYXBwXFxjb21wb25lbnRzXFxwcmF5ZXJ0aW1lXFxwcmF5ZXJ0aW1lXFxwcmF5ZXItZGF0ZS1yYW5nZVxccHJheWVyLWRhdGUtcmFuZ2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvcHJheWVydGltZS9wcmF5ZXJ0aW1lL3ByYXllci1kYXRlLXJhbmdlL3ByYXllci1kYXRlLXJhbmdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxnQkFBQTtBQ0NGO0FEQUU7RUFDRSxjQUFBO0VBQ0EsZ0JBQUE7QUNFSjtBREVBO0VBQ0UsZUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3ByYXllcnRpbWUvcHJheWVydGltZS9wcmF5ZXItZGF0ZS1yYW5nZS9wcmF5ZXItZGF0ZS1yYW5nZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb2x1bW5PcHRpb25EcmF3ZXIge1xyXG4gIHBhZGRpbmctbGVmdDogMTBweDtcclxuICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gIG1hdC1jaGVja2JveCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgfVxyXG59XHJcblxyXG4uZmxvYXRpbmctYnRue1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBib3R0b206IDIwcHg7XHJcbiAgcmlnaHQ6IDIwcHg7XHJcbn1cclxuIiwiLmNvbHVtbk9wdGlvbkRyYXdlciB7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy10b3A6IDVweDtcbn1cbi5jb2x1bW5PcHRpb25EcmF3ZXIgbWF0LWNoZWNrYm94IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmctdG9wOiA1cHg7XG59XG5cbi5mbG9hdGluZy1idG4ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMjBweDtcbiAgcmlnaHQ6IDIwcHg7XG59Il19 */\";","import { Component, OnInit, OnChanges, Input, SimpleChanges, ViewChild } from '@angular/core';\nimport { AppServices } from 'src/app/services/app.services';\nimport { PrayerTimeService } from '../../prayertime.service';\nimport { MatTable } from '@angular/material/table';\n\n@Component({\n  selector: 'app-prayer-date-range',\n  templateUrl: './prayer-date-range.component.html',\n  styleUrls: ['./prayer-date-range.component.scss']\n})\nexport class PrayerDateRangeComponent implements OnInit, OnChanges {\n\n  @Input() selectedSchool: number;\n  @Input() selectedCalcMethod: any;\n  @Input() midnightMode: number;\n  @Input() latitudeAdjustmentMethod: number;\n  @ViewChild('prayerTable') prayerTable: MatTable<any>;\n\n  dayPrayers: any[];\n  tempData: any;\n  columnsToDisplay: any[];\n  columns: any[];\n  startDate: Date;\n  numberOfDays: number;\n\n  constructor(private appServices: AppServices, private prayerTimeService: PrayerTimeService) { }\n\n  ngOnInit(): void {\n    this.onInit();\n  }\n\n  onInit() {\n    this.dayPrayers = [];\n    this.populatePrayerColumns();\n    this.updateDisplayColumns();\n    this.startDate = new Date();\n    this.numberOfDays = 7;\n  }\n\n  updateDisplayColumns() {\n    this.columnsToDisplay = this.columns.filter(y => y.isDisplay === true).map(y => y.name);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  checkboxChange() {\n    // console.log(event.checked);\n    // this.columns.filter(y => y.name === timing)[0].isDisplay = event.checked;\n    this.updateDisplayColumns();\n  }\n\n  populatePrayerColumns(): void {\n    const cols: any[] = [\n      { name: 'Fajr', isDisplay: true },\n      { name: 'Dhuhr', isDisplay: true },\n      { name: 'Asr', isDisplay: true },\n      { name: 'Maghrib', isDisplay: true },\n      { name: 'Isha', isDisplay: true },\n      { name: 'Sunrise', isDisplay: false },\n      { name: 'Sunset', isDisplay: false },\n      { name: 'Imsak', isDisplay: false }\n    ];\n    this.columns = cols;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.selectedSchool !== undefined && this.selectedCalcMethod !== undefined &&\n      this.midnightMode !== undefined && this.latitudeAdjustmentMethod !== undefined) {\n      this.onInit();\n      this.getData();\n    }\n  }\n\n  getData() {\n    this.dayPrayers = [];\n    for (let i = 0; i < 7; i++) {\n      const date = this.startDate;\n      date.setDate(date.getDate() + i);\n      const timestamp = date.getTime() / 1000;\n\n      this.prayerTimeService.getPrayerTimes(\n        timestamp, this.appServices.geo.lat, this.appServices.geo.lng, this.selectedCalcMethod, this.selectedSchool,\n        this.midnightMode, this.latitudeAdjustmentMethod)\n        .subscribe((x: any) => {\n          if (x.code === 200) {\n            this.tempData = x.data;\n            const timings = x.data.timings;\n\n            this.dayPrayers.push(timings);\n            // this.todayPrayerTimes.push({ name: 'Fajr', value: timings['Fajr'] });\n            // this.todayPrayerTimes.push({ name: 'Dhuhr', value: timings['Dhuhr'] });\n            // this.todayPrayerTimes.push({ name: 'Asr', value: timings['Asr'] });\n            // this.todayPrayerTimes.push({ name: 'Maghrib', value: timings['Maghrib'] });\n            // this.todayPrayerTimes.push({ name: 'Isha', value: timings['Isha'] });\n            // this.todayOtherTimes.push({ name: 'Sunrise', value: timings['Sunrise'] });\n            // this.todayOtherTimes.push({ name: 'Sunset', value: timings['Sunset'] });\n            // this.todayOtherTimes.push({ name: 'Imsak', value: timings['Imsak'] });\n            if (this.prayerTable) {\n              this.prayerTable.renderRows();\n            }\n          } else {\n            console.log(x);\n          }\n        });\n    }\n  }\n\n}\n\n","export default \".today-timing-list .today-timing-list-item-name {\\n  min-width: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcmF5ZXJ0aW1lL3ByYXllcnRpbWUvcHJheWVyLXRvZGF5L0Q6XFxXb3Jrc3BhY2VcXFByb2plY3RzXFxwcmF5ZXJ0aW1lcy9zcmNcXGFwcFxcY29tcG9uZW50c1xccHJheWVydGltZVxccHJheWVydGltZVxccHJheWVyLXRvZGF5XFxwcmF5ZXItdG9kYXkuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvcHJheWVydGltZS9wcmF5ZXJ0aW1lL3ByYXllci10b2RheS9wcmF5ZXItdG9kYXkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxnQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcmF5ZXJ0aW1lL3ByYXllcnRpbWUvcHJheWVyLXRvZGF5L3ByYXllci10b2RheS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b2RheS10aW1pbmctbGlzdHtcclxuICAudG9kYXktdGltaW5nLWxpc3QtaXRlbS1uYW1le1xyXG4gICAgbWluLXdpZHRoOjEwMHB4O1xyXG4gIH1cclxufVxyXG4iLCIudG9kYXktdGltaW5nLWxpc3QgLnRvZGF5LXRpbWluZy1saXN0LWl0ZW0tbmFtZSB7XG4gIG1pbi13aWR0aDogMTAwcHg7XG59Il19 */\";","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AppServices } from 'src/app/services/app.services';\nimport { PrayerTimeService } from '../../prayertime.service';\n\n@Component({\n  selector: 'app-prayer-today',\n  templateUrl: './prayer-today.component.html',\n  styleUrls: ['./prayer-today.component.scss']\n})\nexport class PrayerTodayComponent implements OnInit, OnChanges {\n\n  @Input() selectedSchool: number;\n  @Input() selectedCalcMethod: any;\n  @Input() midnightMode: number;\n  @Input() latitudeAdjustmentMethod: number;\n\n  todayPrayerTimes: any[];\n  todayOtherTimes: any[];\n  tempData: any;\n\n  constructor(private appServices: AppServices, private prayerTimeService: PrayerTimeService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.selectedSchool !== undefined && this.selectedCalcMethod !== undefined &&\n      this.midnightMode !== undefined && this.latitudeAdjustmentMethod !== undefined) {\n      this.getTodaysData();\n    }\n  }\n\n  getTodaysData() {\n    this.prayerTimeService.getTodayPrayerTimes(\n      this.appServices.geo.lat, this.appServices.geo.lng, this.selectedCalcMethod, this.selectedSchool,\n      this.midnightMode, this.latitudeAdjustmentMethod)\n      .subscribe((x: any) => {\n        if (x.code === 200) {\n          this.tempData = x.data;\n          const timings = x.data.timings;\n          this.todayPrayerTimes = [];\n          this.todayPrayerTimes.push({ name: 'Fajr', value: timings['Fajr'] });\n          this.todayPrayerTimes.push({ name: 'Dhuhr', value: timings['Dhuhr'] });\n          this.todayPrayerTimes.push({ name: 'Asr', value: timings['Asr'] });\n          this.todayPrayerTimes.push({ name: 'Maghrib', value: timings['Maghrib'] });\n          this.todayPrayerTimes.push({ name: 'Isha', value: timings['Isha'] });\n\n          this.todayOtherTimes = [];\n          this.todayOtherTimes.push({ name: 'Sunrise', value: timings['Sunrise'] });\n          this.todayOtherTimes.push({ name: 'Sunset', value: timings['Sunset'] });\n          this.todayOtherTimes.push({ name: 'Imsak', value: timings['Imsak'] });\n\n        } else {\n          console.log(x);\n        }\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJheWVydGltZS9wcmF5ZXJ0aW1lL3ByYXllcnRpbWUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AppServices } from 'src/app/services/app.services';\nimport { PrayerTimeService } from '../prayertime.service';\n\n@Component({\n  selector: 'app-prayertime',\n  templateUrl: './prayertime.component.html',\n  styleUrls: ['./prayertime.component.scss']\n})\nexport class PrayerTimeComponent implements OnInit {\n  calcMethods: any[];\n  asarCalcMethods: any[];\n  selectedCalcMethod: any;\n  midnightMode: number;\n  latitudeAdjustmentMethod: number;\n  selectedSchool: number;\n  schools: string[];\n  tabSelectedIndex: number;\n\n  constructor(private appServices: AppServices, private prayerTimeService: PrayerTimeService) { }\n\n  async ngOnInit() {\n    this.tabSelectedIndex = 2;\n    this.calcMethods = this.appServices.getCalcMethods();\n    this.schools = this.appServices.getSchools();\n\n    // lat/lng is required to load upfront before selected{Properties}\n    if (!this.appServices.geo.isLatLngFound) {\n      await this.appServices.geo.getSetLatLng();\n    }\n\n    // if selectedCalcMethod is already stored with us use that, otherwise default\n    const selectedCalcMethod = this.appServices.store.getSelectedCalcMethod();\n    this.selectedCalcMethod = selectedCalcMethod === null ? 2 : Number(selectedCalcMethod);;\n\n    const selectedSchool = this.appServices.store.getSelectedSchool();\n    this.selectedSchool = selectedSchool === null ? 1 : Number(selectedSchool);\n\n    const midnightMode = this.appServices.store.getMidnightMode();\n    this.midnightMode = midnightMode === null ? 1 : Number(midnightMode);\n\n    const latitudeAdjustmentMethod = this.appServices.store.getLatitudeAdjustmentMethod();\n    this.latitudeAdjustmentMethod = latitudeAdjustmentMethod === null ? 0 : Number(latitudeAdjustmentMethod);;\n\n  }\n\n  calMethodSelectionChange($event) {\n    // console.log($event);\n    // store to show preselected next time\n    this.appServices.store.setSelectedCalcMethod(String($event.value));\n  }\n\n  schoolSelectionChange($event) {\n    // store to show preselected next time\n    this.appServices.store.setSelectedSchool(String($event.value));\n  }\n\n  refresh() {\n    // find selected tab\n    this.selectedCalcMethod = 10;\n\n    // update the data of selected tab\n\n  }\n\n}\n"]}