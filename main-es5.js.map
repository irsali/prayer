{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/shell/shell.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/app-service.module.ts","webpack:///src/app/services/app.services.ts","webpack:///src/app/services/error.interceptor.ts","webpack:///src/app/services/geo.service.ts","webpack:///src/app/services/store.service.ts","webpack:///src/app/shell/shell.component.scss","webpack:///src/app/shell/shell.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","webpackAsyncContextKeys","Object","module","exports","routes","path","redirectTo","pathMatch","loadChildren","AppRoutingModule","imports","forRoot","AppComponent","title","selector","template","AppModule","declarations","providers","bootstrap","AppServicesModule","ngModule","provide","useClass","multi","AppServices","router","location","http","notification","alert","dialog","meta","store","geo","init","data","calc_methods","MWL","name","params","Fajr","Isha","ISNA","EGYPT","MAKKAH","KARACHI","TEHRAN","Maghrib","Midnight","JAFARI","GULF","KUWAIT","QATAR","SINGAPORE","FRANCE","TURKEY","RUSSIA","CUSTOM","school","midnight_mode","arr","forEach","x","obj","push","ErrorInterceptor","notificationService","apiUrl","request","next","handle","pipe","event","console","log","error","status","errorMessage","getMessageToDisplay","notifyBadRequest","statusText","notifyBadRoute","headers","has","get","localStorage","getItem","subscribe","navigateByUrl","warn","extactedMessage","Array","isArray","GeoService","isLatLngAccessChecked","isLatLngFound","getCoordinates","position","coords","lat","latitude","lng","longitude","reject","navigator","geolocation","getCurrentPosition","IrsStoreService","token","setItem","value","ShellComponent","model","blah","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./components/prayertime/prayertime.module\": [\n\t\t\"./src/app/components/prayertime/prayertime.module.ts\",\n\t\t\"components-prayertime-prayertime-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","export default \"<app-shell></app-shell>\\n\";","export default \"<router-outlet></router-outlet>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  {\n    path: 'home',\n    loadChildren: './components/prayertime/prayertime.module#PrayerTimeModule',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title = 'prayertimes';\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '@irshadali/controls';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ShellComponent } from './shell/shell.component';\nimport { AppServicesModule } from './services/app-service.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShellComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    SharedModule.forRoot(),\n    AppServicesModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppServices } from './app.services';\r\nimport { IrsStoreService } from './store.service';\r\nimport { ErrorInterceptor } from './error.interceptor';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { GeoService } from './geo.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class AppServicesModule {\r\n\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: AppServicesModule,\r\n      providers: [\r\n        AppServices,\r\n        IrsStoreService,\r\n        GeoService,\r\n        // {\r\n        //   provide: HTTP_INTERCEPTORS,\r\n        //   useClass: TokenInterceptor,\r\n        //   multi: true\r\n        // },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ErrorInterceptor,\r\n          multi: true\r\n        },\r\n      ]\r\n    };\r\n  }\r\n\r\n}\r\n\r\n","\r\nimport { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IrsAlertService, IrsDialogService, IrsDtoMetadataService, IrsHttpService, IrsNotificationService } from '@irshadali/controls';\r\nimport { IrsStoreService } from './store.service';\r\nimport { GeoService } from './geo.service';\r\n\r\n@Injectable()\r\nexport class AppServices {\r\n  data: { calc_methods: {}, school: Array<string>, midnight_mode: Array<string> };\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public location: Location,\r\n    public http: IrsHttpService,\r\n    public notification: IrsNotificationService,\r\n    public alert: IrsAlertService,\r\n    public dialog: IrsDialogService,\r\n    public meta: IrsDtoMetadataService,\r\n    public store: IrsStoreService,\r\n    public geo: GeoService,\r\n  ) {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.data = {} as any;\r\n    this.data.calc_methods = {\r\n      MWL: {\r\n        id: 3,\r\n        name: 'Muslim World League', params: { Fajr: 18, Isha: 17 }\r\n      },\r\n      ISNA: {\r\n        id: 2, name: 'Islamic Society of North America (ISNA)', params: { Fajr: 15, Isha: 15 }\r\n      },\r\n      EGYPT: {\r\n        id: 5, name: 'Egyptian General Authority of Survey', params: { Fajr: 19.5, Isha: 17.5 }\r\n      },\r\n      MAKKAH: {\r\n        id: 4, name: 'Umm Al-Qura University, Makkah', params: { Fajr: 18.5, Isha: '90 min' }\r\n      },\r\n      KARACHI: {\r\n        id: 1, name: 'University of Islamic Sciences, Karachi', params: { Fajr: 18, Isha: 18 }\r\n      },\r\n      TEHRAN: {\r\n        id: 7, name: 'Institute of Geophysics, University of Tehran', params: { Fajr: 17.7, Isha: 14, Maghrib: 4.5, Midnight: 'JAFARI' }\r\n      },\r\n      JAFARI: {\r\n        id: 0, name: 'Shia Ithna-Ashari, Leva Institute, Qum', params: { Fajr: 16, Isha: 14, Maghrib: 4, Midnight: 'JAFARI' }\r\n      },\r\n      GULF: {\r\n        id: 8, name: 'Gulf Region', params: { Fajr: 19.5, Isha: '90 min' }\r\n      },\r\n      KUWAIT: {\r\n        id: 9, name: 'Kuwait', params: { Fajr: 18, Isha: 17.5 }\r\n      },\r\n      QATAR: {\r\n        id: 10, name: 'Qatar', params: { Fajr: 18, Isha: '90 min' }\r\n      },\r\n      SINGAPORE: {\r\n        id: 11, name: 'Majlis Ugama Islam Singapura, Singapore', params: { Fajr: 20, Isha: 18 }\r\n      },\r\n      FRANCE: {\r\n        id: 12, name: 'Union Organization Islamic de France', params: { Fajr: 12, Isha: 12 }\r\n      },\r\n      TURKEY: {\r\n        id: 13, name: 'Diyanet \\u0130\\u015fleri Ba\\u015fkanl\\u0131\\u011f\\u0131, Turkey', params: { Fajr: 18, Isha: 17 }\r\n      },\r\n      RUSSIA: {\r\n        id: 14, name: 'Spiritual Administration of Muslims of Russia', params: { Fajr: 16, Isha: 15 }\r\n      },\r\n      CUSTOM: {\r\n        id: 99\r\n      }\r\n    }\r\n\r\n    this.data.school = ['Shafi', 'Hanafi'];\r\n    this.data.midnight_mode = ['Standard (Mid Sunset to Sunrise)', 'Jafari (Mid Sunset to Fajr)'];\r\n\r\n  }\r\n\r\n  getCalcMethods() {\r\n    const arr = [];\r\n    Object.keys(this.data.calc_methods).forEach(x => {\r\n      const obj = this.data.calc_methods[x];\r\n      arr.push({ id: obj.id, name: obj.name });\r\n    });\r\n    return arr;\r\n  }\r\n\r\n  getSchools() {\r\n    return this.data.school;\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { IrsNotificationService } from '@irshadali/controls';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '@env/environment';\r\n\r\n// Error Interceptor not in Used. Not tapping all HttpErrorResponse\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  apiUrl = environment.apiUrl;\r\n\r\n  constructor(private notificationService: IrsNotificationService, private router: Router, private http: HttpClient, ) {\r\n\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(request)\r\n      .pipe(\r\n        tap(event => {\r\n          if (event instanceof HttpErrorResponse) {\r\n            console.log(event);\r\n            const error = event;\r\n            if (error.status === 400) {\r\n              // bad request\r\n              const errorMessage = this.getMessageToDisplay(error.error, '');\r\n              this.notificationService.notifyBadRequest(errorMessage, error.statusText);\r\n            } else if (error.status === 404) {\r\n              // not found\r\n              this.notificationService.notifyBadRoute(null, error.statusText);\r\n            } else if (error.status === 401) {\r\n              // Unauthorized\r\n              if (error.headers.has('Refresh-Token-Required')) {\r\n                this.http.get(\r\n                  // tslint:disable-next-line: max-line-length\r\n                  `${this.apiUrl}Account/Refresh?token=${localStorage.getItem('token')}&refreshToken=${localStorage.getItem('refresh_token')}`\r\n                ).subscribe(x => {\r\n                  if (x) {\r\n                    console.log('token refreshed');\r\n                    console.log(x);\r\n                  }\r\n                });\r\n              } else {\r\n                this.notificationService.notifyBadRequest('User is not Authorized to acces this resource.', error.statusText);\r\n                this.router.navigateByUrl('');\r\n              }\r\n              // return of<T>(null);\r\n\r\n            } else if (error.status === 0) {\r\n              // Bad Gateway or Server Error. 500+ error\r\n              this.notificationService.notifyBadRoute('Please try again later!', error.statusText);\r\n            } else {\r\n              console.warn('handle this error in Http Service');\r\n              console.warn(error);\r\n            }\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  private getMessageToDisplay(error: any, extactedMessage: string): string {\r\n    if (!error) {\r\n      return '';\r\n    }\r\n    if (typeof error === 'string') {\r\n      return error;\r\n    } else if (Array.isArray(error)) {\r\n      error.forEach(x => (extactedMessage += this.getMessageToDisplay(x, extactedMessage)));\r\n      return extactedMessage;\r\n    } else {\r\n      Object.keys(error).forEach(x => extactedMessage += this.getMessageToDisplay(error[x], extactedMessage));\r\n      return extactedMessage;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GeoService {\r\n\r\n  lat: number;\r\n  lng: number;\r\n  isLatLngAccessChecked = false;\r\n  isLatLngFound = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  async getSetLatLng() {\r\n    return this.getCoordinates().then(\r\n      (position: any) => {\r\n        this.isLatLngAccessChecked = true;\r\n        if (position && position.coords) {\r\n          this.isLatLngFound = true;\r\n          this.lat = position.coords.latitude;\r\n          this.lng = position.coords.longitude;\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.isLatLngAccessChecked = true;\r\n        this.isLatLngFound = false;\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  private getCoordinates() {\r\n    return new Promise((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition(resolve, reject);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class IrsStoreService {\r\n\r\n  private store: Storage;\r\n\r\n  constructor() {\r\n    this.store = localStorage;\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.store.setItem('token', token);\r\n  }\r\n\r\n  getToken() {\r\n    return this.store.getItem('token');\r\n  }\r\n\r\n  setRefreshToken(token: string) {\r\n    this.store.setItem('refresh_token', token);\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return this.store.getItem('refresh_token');\r\n  }\r\n\r\n  setSelectedCalcMethod(value: string) {\r\n    this.store.setItem('selected_calc_method', value);\r\n  }\r\n\r\n  getSelectedCalcMethod() {\r\n    return this.store.getItem('selected_calc_method');\r\n  }\r\n\r\n  setSelectedSchool(value: string) {\r\n    this.store.setItem('selected_school_of_thought', value);\r\n  }\r\n\r\n  getSelectedSchool() {\r\n    return this.store.getItem('selected_school_of_thought');\r\n  }\r\n\r\n  setMidnightMode(value: string) {\r\n    this.store.setItem('selected_midnight_mode', value);\r\n  }\r\n\r\n  getMidnightMode() {\r\n    return this.store.getItem('selected_midnight_mode');\r\n  }\r\n\r\n  setLatitudeAdjustmentMethod(value: string) {\r\n    this.store.setItem('selected_latitude_adjustment_method', value);\r\n  }\r\n\r\n  getLatitudeAdjustmentMethod() {\r\n    return this.store.getItem('selected_latitude_adjustment_method');\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoZWxsL3NoZWxsLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.scss']\n})\nexport class ShellComponent implements OnInit {\n  model = {\n    blah: 'text'\n  };\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: ''\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}